{"ast":null,"code":"import { HTTP_INTERCEPTORS } from \"@angular/common/http\";\nexport class InterceptorService {\n  constructor(tokenService) {\n    this.tokenService = tokenService;\n  }\n  intercept(req, next) {\n    let intReq = req;\n    const token = this.tokenService.getToken();\n    if (token != null) {\n      intReq = req.clone({\n        headers: req.headers.set('Authorization', 'Bearer' + token)\n      });\n    }\n    return next.handle(intReq);\n  }\n}\nexport const interceptorProvider = [{\n  provide: HTTP_INTERCEPTORS,\n  useClass: InterceptorService,\n  multi: true\n}];","map":{"version":3,"mappings":"AAAA,SAA8CA,iBAAiB,QAAQ,sBAAsB;AAI7F,OAAM,MAAOC,kBAAkB;EAC3BC,YAAoBC,YAA0B;IAA1B,iBAAY,GAAZA,YAAY;EAAgB;EAEhDC,SAAS,CAACC,GAAqB,EAAEC,IAAiB;IAC9C,IAAIC,MAAM,GAAGF,GAAG;IAChB,MAAMG,KAAK,GAAG,IAAI,CAACL,YAAY,CAACM,QAAQ,EAAE;IAC1C,IAAGD,KAAK,IAAI,IAAI,EAAC;MACbD,MAAM,GAAGF,GAAG,CAACK,KAAK,CAAC;QACfC,OAAO,EAAEN,GAAG,CAACM,OAAO,CAACC,GAAG,CAAC,eAAe,EAAC,QAAQ,GAACJ,KAAK;OAC1D,CAAC;;IAEN,OAAOF,IAAI,CAACO,MAAM,CAACN,MAAM,CAAC;EAC9B;;AAGJ,OAAO,MAAMO,mBAAmB,GAAG,CAAC;EAChCC,OAAO,EAAEf,iBAAiB;EAC1BgB,QAAQ,EAAEf,kBAAkB;EAC5BgB,KAAK,EAAE;CACV,CAAC","names":["HTTP_INTERCEPTORS","InterceptorService","constructor","tokenService","intercept","req","next","intReq","token","getToken","clone","headers","set","handle","interceptorProvider","provide","useClass","multi"],"sourceRoot":"","sources":["C:\\ArgentinaPrograma\\miProyecto\\ProyectoAP\\FrontEnd\\src\\app\\service\\interceptor-service.ts"],"sourcesContent":["import { HttpEvent, HttpHandler, HttpRequest, HTTP_INTERCEPTORS } from \"@angular/common/http\";\nimport { Observable } from \"rxjs\";\nimport { TokenService } from \"./token.service\";\n\nexport class InterceptorService {\n    constructor(private tokenService: TokenService){}\n\n    intercept(req: HttpRequest<any>, next: HttpHandler): Observable<HttpEvent<any>>{\n        let intReq = req;\n        const token = this.tokenService.getToken();\n        if(token != null){\n            intReq = req.clone({\n                headers: req.headers.set('Authorization','Bearer'+token)\n            });\n        }\n        return next.handle(intReq);\n    }\n}\n\nexport const interceptorProvider = [{\n    provide: HTTP_INTERCEPTORS,\n    useClass: InterceptorService,\n    multi: true\n}]\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}